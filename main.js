!function(){"use strict";var e=class{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButton=this._formElement.querySelector(e.submitButtonSelector),this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)]}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=""}_checkFormValidity(){return this._inputElements.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}},t=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._popupElementCloseBtn=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()})),this._popupElementCloseBtn.addEventListener("click",(()=>{this.close()}))}},r=class extends t{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popupForm.querySelector(".modal__button")}setLoading(e){this._submitButton.textContent=e?"Saving...":"Save"}_getInputValues(){return this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}setEventListeners(){this._popupElement.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}};const s=new class{constructor(e){let{baseUrl:t,authToken:r,headers:s}=e;this._baseUrl=t,this._authToken=r,this._headers=s}_processResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error("Error:",e)}))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{throw console.error("Error:",e),e}))}updateProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.description})}).then((e=>this._processResponse(e))).catch((e=>{console.error("Error:",e)}))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error("Error:",e)}))}removeCard(e){return console.log(e),fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error("Error:",e)}))}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error("Error:",e)}))}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error("Error:",e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",authToken:"5c996316-6337-4579-a87d-d8a06991f1d4"}),o=document.querySelector("#profile-edit-button"),n=document.querySelector("#profile-edit-modal"),i=document.querySelector("#add-card-modal"),a=(document.querySelector("#preview-image-modal"),document.querySelector("#profile-title")),l=document.querySelector("#profile-description"),c=i.querySelector(".modal__form"),d=document.querySelector(".card"),u=(document.querySelectorAll(".modal"),document.querySelector("#profile-close-button")),h=document.querySelector("#card-close-button"),_=document.querySelector(".profile__add-button"),m=document.querySelector("#delete-modal-button"),p=document.querySelector(".profile__avatar-button"),E=document.querySelector("#avatar-close-button"),v=document.querySelector(".profile__image"),k=document.querySelector("#avatar-edit-modal"),S=(document.querySelector("#save-avatar-button"),document.querySelector("#profile-description-input")),y=document.querySelector("#profile-title-input"),L=c.querySelector(".modal__input_type_title"),f=c.querySelector(".modal__input_type_link");function b(e,t){t?s.unlikeCard(e).then((e=>{this._likes=e.isLiked,this._renderLikes()})).catch((e=>{console.error(e)})):s.likeCard(e).then((e=>{this._likes=e.isLiked,this._renderLikes()})).catch((e=>{console.error(e)}))}const C=new r("#avatar-edit-modal",(function(e){C.setLoading(!0),s.updateProfileAvatar(e.link).then((e=>{q.setUserAvatar(e.avatar),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.setLoading(!1,"Saving")}))}));C.setEventListeners(),p.addEventListener("click",(()=>C.open()));const q=new class{constructor(e,t,r){this.name=e,this.description=t,this._avatarElement=r}getUserInfo(){return{description:this.description.textContent,name:this.name.textContent}}setUserInfo(e){let{name:t,description:r}=e;this.name.textContent=t,this.description.textContent=r}setUserAvatar(e){this._avatarElement.src=e}}(a,l,v);s.getUserInfo().then((e=>{q.setUserInfo({name:e.name,description:e.about})}));const g=new r("#profile-edit-modal",(function(e){g.setLoading(!0),s.updateProfile(e).then((()=>{g.close(),location.reload()})).catch((e=>{console.error(e)})).finally((()=>{g.setLoading(!1)}))}));g.setEventListeners();const I=new r("#add-card-modal",(function(){const{value:e}=L,{value:t}=f,r={name:e,link:t};s.addCard(r).then((e=>{A(e,d),I.close()})).catch((e=>{console.error(e)}))}));I.setEventListeners();const w=new class extends t{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._deleteButton=this._popupElement.querySelector(".modal__delete-button")}setSubmitAction(e){this._handleFormSubmit=e}setLoading(e){this._popupForm.textContent=e?"Loading...":"Yes"}_handleSubmit=e=>{e.preventDefault(),this._handleFormSubmit()};close(){super.close(),this._popupForm.removeEventListener("submit",this._handleSubmit)}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}}("#card__delete-modal");function T(e){w.setSubmitAction((()=>{w.setLoading(!0),s.removeCard(e).then((()=>{w.close(),location.reload()})).catch((e=>{console.error(e)})).finally((()=>{w.setLoading(!1)}))})),w.open()}w.setEventListeners();const j={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},B=n.querySelector(".modal__form"),$=i.querySelector(".modal__form"),U=k.querySelector(".modal__form"),P=new e(j,B),x=new e(j,$),V=new e(j,U);let F;P.enableValidation(),x.enableValidation(),V.enableValidation();const A=e=>{const t=new class{constructor(e,t,r,s,o){let{name:n,link:i,isLiked:a,_id:l,ownerId:c,userId:d,myId:u}=e;this._name=n,this._link=i,this._likes=a,this._cardSelector=t,this._handleCardClick=r,this._handleDeleteCardClick=s,this._handleCardLikeClick=o,this._likesNum=0,this._cardId=l,this._userId=d,this._ownerId=c,this._myId=u}getId(){return this._id}_getData(){return{name:this._name,link:this._link}}setLikesStatus(e){this._likes=e,this._renderLikes()}_renderLikes(){const e=this._cardElement.querySelector(".card__like-button");this._likes?e.classList.add("card__like-button_active"):e.classList.remove("card__like-button_active")}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleCardLikeClick(this._cardId,this._likes)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCardClick(this._cardId)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_handleDeleteCardClick(){this._removeCard()}removeCard(){this._cardElement.remove(),this._cardElement=null}_hideDeleteButton(){this._ownerId!==this._userId&&this._cardElement.querySelector(".card__delete-button")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card__list").cloneNode(!0),this._cardElement.querySelector(".card__title").innerText=this._name,this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=this._name,this._setEventListeners(),this._renderLikes(),this._cardElement}}(e,"#card-template",z,T,b);F.addItem(t.getView())};s.getInitialCards().then((e=>{F=new class{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:e.reverse(),renderer:A},".card"),F.renderItems()}));const D=new class extends t{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__image"),this._previewText=this._popupElement.querySelector(".modal__preview-title")}open(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._previewText.textContent=e,super.open()}}("#preview-image-modal");function z(e,t){D.open(e,t)}D.setEventListeners(),o.addEventListener("click",(function(){!function(){const e=q.getUserInfo();y.value=e.name,S.value=e.description}(),g.open()})),u.addEventListener("click",(()=>g.close())),_.addEventListener("click",(()=>{x.toggleButtonState(),I.open()})),h.addEventListener("click",(()=>I.close())),m.addEventListener("click",(()=>{w.close()})),E.addEventListener("click",(()=>{C.close()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,